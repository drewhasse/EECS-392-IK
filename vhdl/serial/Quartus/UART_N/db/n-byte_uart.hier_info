|n_byte_uart
clk => UART_nByte:UART_nByte_i.clk
clk => sev_seg[0].CLK
clk => sev_seg[1].CLK
clk => sev_seg[2].CLK
clk => sev_seg[3].CLK
clk => sev_seg[4].CLK
clk => sev_seg[5].CLK
clk => sev_seg[6].CLK
clk => sev_seg[7].CLK
clk => sev_seg[8].CLK
clk => sev_seg[9].CLK
clk => sev_seg[10].CLK
clk => sev_seg[11].CLK
clk => sev_seg[12].CLK
clk => sev_seg[13].CLK
clk => sev_seg[14].CLK
clk => sev_seg[15].CLK
clk => sev_seg[16].CLK
clk => sev_seg[17].CLK
clk => sev_seg[18].CLK
clk => sev_seg[19].CLK
clk => sev_seg[20].CLK
clk => sev_seg[21].CLK
clk => sev_seg[22].CLK
clk => sev_seg[23].CLK
clk => sev_seg[24].CLK
clk => sev_seg[25].CLK
clk => sev_seg[26].CLK
clk => sev_seg[27].CLK
clk => sev_seg[28].CLK
clk => sev_seg[29].CLK
clk => sev_seg[30].CLK
clk => sev_seg[31].CLK
reset => UART_nByte:UART_nByte_i.reset
RX => UART_nByte:UART_nByte_i.RX
RX => LED_o.DATAIN
LED_o << RX.DB_MAX_OUTPUT_PORT_TYPE
LED2 << <VCC>
data_valid << UART_nByte:UART_nByte_i.data_valid
dout[0] << leddcd:LED_gen:0:leddcd_i.segments_out[0]
dout[1] << leddcd:LED_gen:0:leddcd_i.segments_out[1]
dout[2] << leddcd:LED_gen:0:leddcd_i.segments_out[2]
dout[3] << leddcd:LED_gen:0:leddcd_i.segments_out[3]
dout[4] << leddcd:LED_gen:0:leddcd_i.segments_out[4]
dout[5] << leddcd:LED_gen:0:leddcd_i.segments_out[5]
dout[6] << leddcd:LED_gen:0:leddcd_i.segments_out[6]
dout[7] << leddcd:LED_gen:1:leddcd_i.segments_out[0]
dout[8] << leddcd:LED_gen:1:leddcd_i.segments_out[1]
dout[9] << leddcd:LED_gen:1:leddcd_i.segments_out[2]
dout[10] << leddcd:LED_gen:1:leddcd_i.segments_out[3]
dout[11] << leddcd:LED_gen:1:leddcd_i.segments_out[4]
dout[12] << leddcd:LED_gen:1:leddcd_i.segments_out[5]
dout[13] << leddcd:LED_gen:1:leddcd_i.segments_out[6]
dout[14] << leddcd:LED_gen:2:leddcd_i.segments_out[0]
dout[15] << leddcd:LED_gen:2:leddcd_i.segments_out[1]
dout[16] << leddcd:LED_gen:2:leddcd_i.segments_out[2]
dout[17] << leddcd:LED_gen:2:leddcd_i.segments_out[3]
dout[18] << leddcd:LED_gen:2:leddcd_i.segments_out[4]
dout[19] << leddcd:LED_gen:2:leddcd_i.segments_out[5]
dout[20] << leddcd:LED_gen:2:leddcd_i.segments_out[6]
dout[21] << leddcd:LED_gen:3:leddcd_i.segments_out[0]
dout[22] << leddcd:LED_gen:3:leddcd_i.segments_out[1]
dout[23] << leddcd:LED_gen:3:leddcd_i.segments_out[2]
dout[24] << leddcd:LED_gen:3:leddcd_i.segments_out[3]
dout[25] << leddcd:LED_gen:3:leddcd_i.segments_out[4]
dout[26] << leddcd:LED_gen:3:leddcd_i.segments_out[5]
dout[27] << leddcd:LED_gen:3:leddcd_i.segments_out[6]


|n_byte_uart|UART_nByte:UART_nByte_i
clk => UART_R:UART_R_i.clk
clk => dout_prev[0].CLK
clk => dout_prev[1].CLK
clk => dout_prev[2].CLK
clk => dout_prev[3].CLK
clk => dout_prev[4].CLK
clk => dout_prev[5].CLK
clk => dout_prev[6].CLK
clk => dout_prev[7].CLK
clk => dout_prev[8].CLK
clk => dout_prev[9].CLK
clk => dout_prev[10].CLK
clk => dout_prev[11].CLK
clk => dout_prev[12].CLK
clk => dout_prev[13].CLK
clk => dout_prev[14].CLK
clk => dout_prev[15].CLK
clk => dout_prev[16].CLK
clk => dout_prev[17].CLK
clk => dout_prev[18].CLK
clk => dout_prev[19].CLK
clk => dout_prev[20].CLK
clk => dout_prev[21].CLK
clk => dout_prev[22].CLK
clk => dout_prev[23].CLK
clk => dout_prev[24].CLK
clk => dout_prev[25].CLK
clk => dout_prev[26].CLK
clk => dout_prev[27].CLK
clk => dout_prev[28].CLK
clk => dout_prev[29].CLK
clk => dout_prev[30].CLK
clk => dout_prev[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => valid.CLK
clk => bytes[0].CLK
clk => bytes[1].CLK
clk => bytes[2].CLK
clk => bytes[3].CLK
clk => bytes[4].CLK
clk => bytes[5].CLK
clk => bytes[6].CLK
clk => bytes[7].CLK
clk => bytes[8].CLK
clk => bytes[9].CLK
clk => bytes[10].CLK
clk => bytes[11].CLK
clk => bytes[12].CLK
clk => bytes[13].CLK
clk => bytes[14].CLK
clk => bytes[15].CLK
clk => bytes[16].CLK
clk => bytes[17].CLK
clk => bytes[18].CLK
clk => bytes[19].CLK
clk => bytes[20].CLK
clk => bytes[21].CLK
clk => bytes[22].CLK
clk => bytes[23].CLK
clk => bytes[24].CLK
clk => bytes[25].CLK
clk => bytes[26].CLK
clk => bytes[27].CLK
clk => bytes[28].CLK
clk => bytes[29].CLK
clk => bytes[30].CLK
clk => bytes[31].CLK
clk => curr_state~1.DATAIN
reset => UART_R:UART_R_i.reset
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].PRESET
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => valid.ACLR
reset => bytes[0].ACLR
reset => bytes[1].ACLR
reset => bytes[2].ACLR
reset => bytes[3].ACLR
reset => bytes[4].ACLR
reset => bytes[5].ACLR
reset => bytes[6].ACLR
reset => bytes[7].ACLR
reset => bytes[8].ACLR
reset => bytes[9].ACLR
reset => bytes[10].ACLR
reset => bytes[11].ACLR
reset => bytes[12].ACLR
reset => bytes[13].ACLR
reset => bytes[14].ACLR
reset => bytes[15].ACLR
reset => bytes[16].ACLR
reset => bytes[17].ACLR
reset => bytes[18].ACLR
reset => bytes[19].ACLR
reset => bytes[20].ACLR
reset => bytes[21].ACLR
reset => bytes[22].ACLR
reset => bytes[23].ACLR
reset => bytes[24].ACLR
reset => bytes[25].ACLR
reset => bytes[26].ACLR
reset => bytes[27].ACLR
reset => bytes[28].ACLR
reset => bytes[29].ACLR
reset => bytes[30].ACLR
reset => bytes[31].ACLR
reset => curr_state~3.DATAIN
reset => dout_prev[31].ENA
reset => dout_prev[30].ENA
reset => dout_prev[29].ENA
reset => dout_prev[28].ENA
reset => dout_prev[27].ENA
reset => dout_prev[26].ENA
reset => dout_prev[25].ENA
reset => dout_prev[24].ENA
reset => dout_prev[23].ENA
reset => dout_prev[22].ENA
reset => dout_prev[21].ENA
reset => dout_prev[20].ENA
reset => dout_prev[19].ENA
reset => dout_prev[18].ENA
reset => dout_prev[17].ENA
reset => dout_prev[16].ENA
reset => dout_prev[15].ENA
reset => dout_prev[14].ENA
reset => dout_prev[13].ENA
reset => dout_prev[12].ENA
reset => dout_prev[11].ENA
reset => dout_prev[10].ENA
reset => dout_prev[9].ENA
reset => dout_prev[8].ENA
reset => dout_prev[7].ENA
reset => dout_prev[6].ENA
reset => dout_prev[5].ENA
reset => dout_prev[4].ENA
reset => dout_prev[3].ENA
reset => dout_prev[2].ENA
reset => dout_prev[1].ENA
reset => dout_prev[0].ENA
RX => UART_R:UART_R_i.RX
dout[0] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[9] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[10] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[11] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[12] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[13] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[14] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[15] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[16] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[17] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[18] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[19] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[20] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[21] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[22] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[23] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[24] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[25] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[26] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[27] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[28] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[29] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[30] <= dout.DB_MAX_OUTPUT_PORT_TYPE
dout[31] <= dout.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= valid.DB_MAX_OUTPUT_PORT_TYPE


|n_byte_uart|UART_nByte:UART_nByte_i|UART_R:UART_R_i
clk => RX_data_i.CLK
clk => index[0].CLK
clk => index[1].CLK
clk => index[2].CLK
clk => index[3].CLK
clk => index[4].CLK
clk => index[5].CLK
clk => index[6].CLK
clk => index[7].CLK
clk => index[8].CLK
clk => index[9].CLK
clk => index[10].CLK
clk => index[11].CLK
clk => index[12].CLK
clk => index[13].CLK
clk => index[14].CLK
clk => index[15].CLK
clk => index[16].CLK
clk => index[17].CLK
clk => index[18].CLK
clk => index[19].CLK
clk => index[20].CLK
clk => index[21].CLK
clk => index[22].CLK
clk => index[23].CLK
clk => index[24].CLK
clk => index[25].CLK
clk => index[26].CLK
clk => index[27].CLK
clk => index[28].CLK
clk => index[29].CLK
clk => index[30].CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => clk_count[16].CLK
clk => clk_count[17].CLK
clk => clk_count[18].CLK
clk => clk_count[19].CLK
clk => clk_count[20].CLK
clk => clk_count[21].CLK
clk => clk_count[22].CLK
clk => clk_count[23].CLK
clk => clk_count[24].CLK
clk => clk_count[25].CLK
clk => clk_count[26].CLK
clk => clk_count[27].CLK
clk => clk_count[28].CLK
clk => clk_count[29].CLK
clk => clk_count[30].CLK
clk => RX_data.CLK
clk => stop_sig.CLK
clk => byte[0].CLK
clk => byte[1].CLK
clk => byte[2].CLK
clk => byte[3].CLK
clk => byte[4].CLK
clk => byte[5].CLK
clk => byte[6].CLK
clk => byte[7].CLK
clk => curr_state~1.DATAIN
reset => index[0].ACLR
reset => index[1].ACLR
reset => index[2].ACLR
reset => index[3].ACLR
reset => index[4].ACLR
reset => index[5].ACLR
reset => index[6].ACLR
reset => index[7].ACLR
reset => index[8].ACLR
reset => index[9].ACLR
reset => index[10].ACLR
reset => index[11].ACLR
reset => index[12].ACLR
reset => index[13].ACLR
reset => index[14].ACLR
reset => index[15].ACLR
reset => index[16].ACLR
reset => index[17].ACLR
reset => index[18].ACLR
reset => index[19].ACLR
reset => index[20].ACLR
reset => index[21].ACLR
reset => index[22].ACLR
reset => index[23].ACLR
reset => index[24].ACLR
reset => index[25].ACLR
reset => index[26].ACLR
reset => index[27].ACLR
reset => index[28].ACLR
reset => index[29].ACLR
reset => index[30].ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => clk_count[16].ACLR
reset => clk_count[17].ACLR
reset => clk_count[18].ACLR
reset => clk_count[19].ACLR
reset => clk_count[20].ACLR
reset => clk_count[21].ACLR
reset => clk_count[22].ACLR
reset => clk_count[23].ACLR
reset => clk_count[24].ACLR
reset => clk_count[25].ACLR
reset => clk_count[26].ACLR
reset => clk_count[27].ACLR
reset => clk_count[28].ACLR
reset => clk_count[29].ACLR
reset => clk_count[30].ACLR
reset => RX_data.ACLR
reset => stop_sig.ACLR
reset => byte[0].ACLR
reset => byte[1].ACLR
reset => byte[2].ACLR
reset => byte[3].ACLR
reset => byte[4].ACLR
reset => byte[5].ACLR
reset => byte[6].ACLR
reset => byte[7].ACLR
reset => curr_state~3.DATAIN
reset => RX_data_i.ENA
RX => RX_data_i.DATAIN
RX_DV <= stop_sig.DB_MAX_OUTPUT_PORT_TYPE
RX_byte[0] <= byte[0].DB_MAX_OUTPUT_PORT_TYPE
RX_byte[1] <= byte[1].DB_MAX_OUTPUT_PORT_TYPE
RX_byte[2] <= byte[2].DB_MAX_OUTPUT_PORT_TYPE
RX_byte[3] <= byte[3].DB_MAX_OUTPUT_PORT_TYPE
RX_byte[4] <= byte[4].DB_MAX_OUTPUT_PORT_TYPE
RX_byte[5] <= byte[5].DB_MAX_OUTPUT_PORT_TYPE
RX_byte[6] <= byte[6].DB_MAX_OUTPUT_PORT_TYPE
RX_byte[7] <= byte[7].DB_MAX_OUTPUT_PORT_TYPE


|n_byte_uart|leddcd:\LED_gen:0:leddcd_i
data_in[0] => Equal0.IN7
data_in[0] => Equal1.IN4
data_in[0] => Equal2.IN7
data_in[0] => Equal3.IN4
data_in[0] => Equal4.IN7
data_in[0] => Equal5.IN7
data_in[0] => Equal6.IN7
data_in[0] => Equal7.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN3
data_in[1] => Equal2.IN6
data_in[1] => Equal3.IN7
data_in[1] => Equal4.IN6
data_in[1] => Equal5.IN6
data_in[1] => Equal6.IN6
data_in[1] => Equal7.IN7
data_in[2] => Equal0.IN6
data_in[2] => Equal1.IN7
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN3
data_in[2] => Equal4.IN5
data_in[2] => Equal5.IN2
data_in[2] => Equal6.IN5
data_in[2] => Equal7.IN2
data_in[3] => Equal0.IN2
data_in[3] => Equal1.IN2
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN2
data_in[3] => Equal4.IN4
data_in[3] => Equal5.IN5
data_in[3] => Equal6.IN4
data_in[3] => Equal7.IN6
data_in[4] => Equal0.IN1
data_in[4] => Equal1.IN1
data_in[4] => Equal2.IN1
data_in[4] => Equal3.IN1
data_in[4] => Equal4.IN3
data_in[4] => Equal5.IN1
data_in[4] => Equal6.IN3
data_in[4] => Equal7.IN1
data_in[5] => Equal0.IN5
data_in[5] => Equal1.IN6
data_in[5] => Equal2.IN5
data_in[5] => Equal3.IN6
data_in[5] => Equal4.IN2
data_in[5] => Equal5.IN4
data_in[5] => Equal6.IN2
data_in[5] => Equal7.IN5
data_in[6] => Equal0.IN4
data_in[6] => Equal1.IN5
data_in[6] => Equal2.IN4
data_in[6] => Equal3.IN5
data_in[6] => Equal4.IN1
data_in[6] => Equal5.IN0
data_in[6] => Equal6.IN1
data_in[6] => Equal7.IN0
data_in[7] => Equal0.IN0
data_in[7] => Equal1.IN0
data_in[7] => Equal2.IN0
data_in[7] => Equal3.IN0
data_in[7] => Equal4.IN0
data_in[7] => Equal5.IN3
data_in[7] => Equal6.IN0
data_in[7] => Equal7.IN4
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|n_byte_uart|leddcd:\LED_gen:1:leddcd_i
data_in[0] => Equal0.IN7
data_in[0] => Equal1.IN4
data_in[0] => Equal2.IN7
data_in[0] => Equal3.IN4
data_in[0] => Equal4.IN7
data_in[0] => Equal5.IN7
data_in[0] => Equal6.IN7
data_in[0] => Equal7.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN3
data_in[1] => Equal2.IN6
data_in[1] => Equal3.IN7
data_in[1] => Equal4.IN6
data_in[1] => Equal5.IN6
data_in[1] => Equal6.IN6
data_in[1] => Equal7.IN7
data_in[2] => Equal0.IN6
data_in[2] => Equal1.IN7
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN3
data_in[2] => Equal4.IN5
data_in[2] => Equal5.IN2
data_in[2] => Equal6.IN5
data_in[2] => Equal7.IN2
data_in[3] => Equal0.IN2
data_in[3] => Equal1.IN2
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN2
data_in[3] => Equal4.IN4
data_in[3] => Equal5.IN5
data_in[3] => Equal6.IN4
data_in[3] => Equal7.IN6
data_in[4] => Equal0.IN1
data_in[4] => Equal1.IN1
data_in[4] => Equal2.IN1
data_in[4] => Equal3.IN1
data_in[4] => Equal4.IN3
data_in[4] => Equal5.IN1
data_in[4] => Equal6.IN3
data_in[4] => Equal7.IN1
data_in[5] => Equal0.IN5
data_in[5] => Equal1.IN6
data_in[5] => Equal2.IN5
data_in[5] => Equal3.IN6
data_in[5] => Equal4.IN2
data_in[5] => Equal5.IN4
data_in[5] => Equal6.IN2
data_in[5] => Equal7.IN5
data_in[6] => Equal0.IN4
data_in[6] => Equal1.IN5
data_in[6] => Equal2.IN4
data_in[6] => Equal3.IN5
data_in[6] => Equal4.IN1
data_in[6] => Equal5.IN0
data_in[6] => Equal6.IN1
data_in[6] => Equal7.IN0
data_in[7] => Equal0.IN0
data_in[7] => Equal1.IN0
data_in[7] => Equal2.IN0
data_in[7] => Equal3.IN0
data_in[7] => Equal4.IN0
data_in[7] => Equal5.IN3
data_in[7] => Equal6.IN0
data_in[7] => Equal7.IN4
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|n_byte_uart|leddcd:\LED_gen:2:leddcd_i
data_in[0] => Equal0.IN7
data_in[0] => Equal1.IN4
data_in[0] => Equal2.IN7
data_in[0] => Equal3.IN4
data_in[0] => Equal4.IN7
data_in[0] => Equal5.IN7
data_in[0] => Equal6.IN7
data_in[0] => Equal7.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN3
data_in[1] => Equal2.IN6
data_in[1] => Equal3.IN7
data_in[1] => Equal4.IN6
data_in[1] => Equal5.IN6
data_in[1] => Equal6.IN6
data_in[1] => Equal7.IN7
data_in[2] => Equal0.IN6
data_in[2] => Equal1.IN7
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN3
data_in[2] => Equal4.IN5
data_in[2] => Equal5.IN2
data_in[2] => Equal6.IN5
data_in[2] => Equal7.IN2
data_in[3] => Equal0.IN2
data_in[3] => Equal1.IN2
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN2
data_in[3] => Equal4.IN4
data_in[3] => Equal5.IN5
data_in[3] => Equal6.IN4
data_in[3] => Equal7.IN6
data_in[4] => Equal0.IN1
data_in[4] => Equal1.IN1
data_in[4] => Equal2.IN1
data_in[4] => Equal3.IN1
data_in[4] => Equal4.IN3
data_in[4] => Equal5.IN1
data_in[4] => Equal6.IN3
data_in[4] => Equal7.IN1
data_in[5] => Equal0.IN5
data_in[5] => Equal1.IN6
data_in[5] => Equal2.IN5
data_in[5] => Equal3.IN6
data_in[5] => Equal4.IN2
data_in[5] => Equal5.IN4
data_in[5] => Equal6.IN2
data_in[5] => Equal7.IN5
data_in[6] => Equal0.IN4
data_in[6] => Equal1.IN5
data_in[6] => Equal2.IN4
data_in[6] => Equal3.IN5
data_in[6] => Equal4.IN1
data_in[6] => Equal5.IN0
data_in[6] => Equal6.IN1
data_in[6] => Equal7.IN0
data_in[7] => Equal0.IN0
data_in[7] => Equal1.IN0
data_in[7] => Equal2.IN0
data_in[7] => Equal3.IN0
data_in[7] => Equal4.IN0
data_in[7] => Equal5.IN3
data_in[7] => Equal6.IN0
data_in[7] => Equal7.IN4
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|n_byte_uart|leddcd:\LED_gen:3:leddcd_i
data_in[0] => Equal0.IN7
data_in[0] => Equal1.IN4
data_in[0] => Equal2.IN7
data_in[0] => Equal3.IN4
data_in[0] => Equal4.IN7
data_in[0] => Equal5.IN7
data_in[0] => Equal6.IN7
data_in[0] => Equal7.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN3
data_in[1] => Equal2.IN6
data_in[1] => Equal3.IN7
data_in[1] => Equal4.IN6
data_in[1] => Equal5.IN6
data_in[1] => Equal6.IN6
data_in[1] => Equal7.IN7
data_in[2] => Equal0.IN6
data_in[2] => Equal1.IN7
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN3
data_in[2] => Equal4.IN5
data_in[2] => Equal5.IN2
data_in[2] => Equal6.IN5
data_in[2] => Equal7.IN2
data_in[3] => Equal0.IN2
data_in[3] => Equal1.IN2
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN2
data_in[3] => Equal4.IN4
data_in[3] => Equal5.IN5
data_in[3] => Equal6.IN4
data_in[3] => Equal7.IN6
data_in[4] => Equal0.IN1
data_in[4] => Equal1.IN1
data_in[4] => Equal2.IN1
data_in[4] => Equal3.IN1
data_in[4] => Equal4.IN3
data_in[4] => Equal5.IN1
data_in[4] => Equal6.IN3
data_in[4] => Equal7.IN1
data_in[5] => Equal0.IN5
data_in[5] => Equal1.IN6
data_in[5] => Equal2.IN5
data_in[5] => Equal3.IN6
data_in[5] => Equal4.IN2
data_in[5] => Equal5.IN4
data_in[5] => Equal6.IN2
data_in[5] => Equal7.IN5
data_in[6] => Equal0.IN4
data_in[6] => Equal1.IN5
data_in[6] => Equal2.IN4
data_in[6] => Equal3.IN5
data_in[6] => Equal4.IN1
data_in[6] => Equal5.IN0
data_in[6] => Equal6.IN1
data_in[6] => Equal7.IN0
data_in[7] => Equal0.IN0
data_in[7] => Equal1.IN0
data_in[7] => Equal2.IN0
data_in[7] => Equal3.IN0
data_in[7] => Equal4.IN0
data_in[7] => Equal5.IN3
data_in[7] => Equal6.IN0
data_in[7] => Equal7.IN4
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


