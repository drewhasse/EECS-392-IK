|PWM_test
clk => current_s.CLK
clk => pulseint.CLK
clk => pulse_gate.CLK
clk => pulse_length[0].CLK
clk => pulse_length[1].CLK
clk => pulse_length[2].CLK
clk => pulse_length[3].CLK
clk => pulse_length[4].CLK
clk => pulse_length[5].CLK
clk => pulse_length[6].CLK
clk => pulse_length[7].CLK
clk => pulse_length[8].CLK
clk => pulse_length[9].CLK
clk => pulse_length[10].CLK
clk => pulse_length[11].CLK
clk => pulse_length[12].CLK
clk => pulse_length[13].CLK
clk => pulse_length[14].CLK
clk => pulse_length[15].CLK
clk => pulse_length[16].CLK
clk => pulse_length[17].CLK
clk => pulse_length[18].CLK
clk => pulse_length[19].CLK
clk => pulse_length[20].CLK
clk => pulse_length[21].CLK
clk => pulse_length[22].CLK
clk => pulse_length[23].CLK
clk => pulse_length[24].CLK
clk => pulse_length[25].CLK
clk => pulse_length[26].CLK
clk => pulse_length[27].CLK
clk => pulse_length[28].CLK
clk => pulse_length[29].CLK
clk => pulse_length[30].CLK
clk => pulse_length[31].CLK
clk => count_width[0].CLK
clk => count_width[1].CLK
clk => count_width[2].CLK
clk => count_width[3].CLK
clk => count_width[4].CLK
clk => count_width[5].CLK
clk => count_width[6].CLK
clk => count_width[7].CLK
clk => count_width[8].CLK
clk => count_width[9].CLK
clk => count_width[10].CLK
clk => count_width[11].CLK
clk => count_width[12].CLK
clk => count_width[13].CLK
clk => count_width[14].CLK
clk => count_width[15].CLK
clk => count_width[16].CLK
clk => count_width[17].CLK
clk => count_width[18].CLK
clk => count_width[19].CLK
clk => count_width[20].CLK
clk => count_width[21].CLK
clk => count_width[22].CLK
clk => count_width[23].CLK
clk => count_width[24].CLK
clk => count_width[25].CLK
clk => count_width[26].CLK
clk => count_width[27].CLK
clk => count_width[28].CLK
clk => count_width[29].CLK
clk => count_width[30].CLK
clk => count_width[31].CLK
clk => count_pulse[0].CLK
clk => count_pulse[1].CLK
clk => count_pulse[2].CLK
clk => count_pulse[3].CLK
clk => count_pulse[4].CLK
clk => count_pulse[5].CLK
clk => count_pulse[6].CLK
clk => count_pulse[7].CLK
clk => count_pulse[8].CLK
clk => count_pulse[9].CLK
clk => count_pulse[10].CLK
clk => count_pulse[11].CLK
clk => count_pulse[12].CLK
clk => count_pulse[13].CLK
clk => count_pulse[14].CLK
clk => count_pulse[15].CLK
clk => count_pulse[16].CLK
clk => count_pulse[17].CLK
clk => count_pulse[18].CLK
clk => count_pulse[19].CLK
clk => count_pulse[20].CLK
clk => count_pulse[21].CLK
clk => count_pulse[22].CLK
clk => count_pulse[23].CLK
clk => count_pulse[24].CLK
clk => count_pulse[25].CLK
clk => count_pulse[26].CLK
clk => count_pulse[27].CLK
clk => count_pulse[28].CLK
clk => count_pulse[29].CLK
clk => count_pulse[30].CLK
clk => count_pulse[31].CLK
reset => current_s.ACLR
reset => pulseint.ACLR
reset => pulse_gate.ACLR
reset => pulse_length[0].ACLR
reset => pulse_length[1].ACLR
reset => pulse_length[2].ACLR
reset => pulse_length[3].PRESET
reset => pulse_length[4].ACLR
reset => pulse_length[5].ACLR
reset => pulse_length[6].PRESET
reset => pulse_length[7].ACLR
reset => pulse_length[8].ACLR
reset => pulse_length[9].ACLR
reset => pulse_length[10].ACLR
reset => pulse_length[11].PRESET
reset => pulse_length[12].ACLR
reset => pulse_length[13].PRESET
reset => pulse_length[14].PRESET
reset => pulse_length[15].PRESET
reset => pulse_length[16].PRESET
reset => pulse_length[17].ACLR
reset => pulse_length[18].ACLR
reset => pulse_length[19].ACLR
reset => pulse_length[20].ACLR
reset => pulse_length[21].ACLR
reset => pulse_length[22].ACLR
reset => pulse_length[23].ACLR
reset => pulse_length[24].ACLR
reset => pulse_length[25].ACLR
reset => pulse_length[26].ACLR
reset => pulse_length[27].ACLR
reset => pulse_length[28].ACLR
reset => pulse_length[29].ACLR
reset => pulse_length[30].ACLR
reset => pulse_length[31].ACLR
reset => count_width[0].ACLR
reset => count_width[1].ACLR
reset => count_width[2].ACLR
reset => count_width[3].ACLR
reset => count_width[4].ACLR
reset => count_width[5].ACLR
reset => count_width[6].PRESET
reset => count_width[7].ACLR
reset => count_width[8].ACLR
reset => count_width[9].PRESET
reset => count_width[10].ACLR
reset => count_width[11].ACLR
reset => count_width[12].ACLR
reset => count_width[13].ACLR
reset => count_width[14].PRESET
reset => count_width[15].ACLR
reset => count_width[16].PRESET
reset => count_width[17].PRESET
reset => count_width[18].PRESET
reset => count_width[19].PRESET
reset => count_width[20].ACLR
reset => count_width[21].ACLR
reset => count_width[22].ACLR
reset => count_width[23].ACLR
reset => count_width[24].ACLR
reset => count_width[25].ACLR
reset => count_width[26].ACLR
reset => count_width[27].ACLR
reset => count_width[28].ACLR
reset => count_width[29].ACLR
reset => count_width[30].ACLR
reset => count_width[31].ACLR
reset => count_pulse[0].ACLR
reset => count_pulse[1].ACLR
reset => count_pulse[2].ACLR
reset => count_pulse[3].ACLR
reset => count_pulse[4].ACLR
reset => count_pulse[5].ACLR
reset => count_pulse[6].ACLR
reset => count_pulse[7].ACLR
reset => count_pulse[8].ACLR
reset => count_pulse[9].ACLR
reset => count_pulse[10].ACLR
reset => count_pulse[11].ACLR
reset => count_pulse[12].ACLR
reset => count_pulse[13].ACLR
reset => count_pulse[14].ACLR
reset => count_pulse[15].ACLR
reset => count_pulse[16].ACLR
reset => count_pulse[17].ACLR
reset => count_pulse[18].ACLR
reset => count_pulse[19].ACLR
reset => count_pulse[20].ACLR
reset => count_pulse[21].ACLR
reset => count_pulse[22].ACLR
reset => count_pulse[23].ACLR
reset => count_pulse[24].ACLR
reset => count_pulse[25].ACLR
reset => count_pulse[26].ACLR
reset => count_pulse[27].ACLR
reset => count_pulse[28].ACLR
reset => count_pulse[29].ACLR
reset => count_pulse[30].ACLR
reset => count_pulse[31].ACLR
hold => next_s.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => count_width_c.OUTPUTSELECT
hold => pulse_gate_c.OUTPUTSELECT
hold => pulseint_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => pulse_length_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => count_pulse_c.OUTPUTSELECT
hold => next_s.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button1 => pulse_length_c.OUTPUTSELECT
button2 => combinational.IN1
pulse <= pulseint.DB_MAX_OUTPUT_PORT_TYPE


